#include <iostream>
using namespace std;

int rotation_Find(int arr[] , int size){    // no. of times array is rotated = size - index of min element
    int start =0, end = size -1;
    while(start<=end){
        int mid = (start+end)/2;
        if(arr[start]<arr[end]) 
        return start;
        int next = (mid + 1)%size;       // % size, so that it doesn't go out of bound
        int prev = (mid + size -1)%size;  // + size because in the case of 0 ,without +size it becomes (0-1)%size which is negative
        if(arr[mid]<=arr[prev]&& arr[mid]<=arr[next]){
            return mid;
        }
        else if(arr[start]<=arr[mid]){
            start = mid + 1;
        }
        else if(arr[mid] <= arr[end]){
            end = mid - 1;
        }
    }
    return -1;
}
int main()
{
    int odd[9]={7,9,10,0,1,3,4,5,6};
    cout<<9 - rotation_Find(odd,9);

    return 0;
}
